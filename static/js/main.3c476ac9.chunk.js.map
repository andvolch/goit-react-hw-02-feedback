{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","handleFeedback","map","option","className","s","button","type","value","onClick","Notification","message","text","Statistics","good","neutral","bad","total","positivePercentage","list","item","Section","title","children","container","App","state","countTotalFeedback","countPositiveFeedbackPercentage","totalFeedback","Math","round","e","opt","target","setState","prevState","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c476ac9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2qmxJ\",\"item\":\"Statistics_item__2QdAs\",\"text\":\"Statistics_text__27V_k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3AIFY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__1_DxP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__2h9qE\"};","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, handleFeedback }) => {\r\n  return (\r\n    <div>\r\n      {options.map(option => (\r\n        <button\r\n          key={option}\r\n          className={s.button}\r\n          type=\"button\"\r\n          value={option}\r\n          onClick={handleFeedback}\r\n        >\r\n          {option}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  handleFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport s from './Notification.module.css';\r\n\r\nexport default function Notification({ message }) {\r\n  return <p className={s.text}>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from '../Notification/Notification';\r\nimport s from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return total ? (\r\n    <ul className={s.list}>\r\n      <li className={s.item}>\r\n        <p className={s.text}>Good:</p>\r\n        <span className={s.text}>{good}</span>\r\n      </li>\r\n      <li className={s.item}>\r\n        <p className={s.text}>Neutral:</p>\r\n        <span className={s.text}>{neutral}</span>\r\n      </li>\r\n      <li className={s.item}>\r\n        <p className={s.text}>Bad:</p>\r\n        <span className={s.text}>{bad}</span>\r\n      </li>\r\n      <li className={s.item}>\r\n        <p className={s.text}>Total:</p>\r\n        <span className={s.text}>{total}</span>\r\n      </li>\r\n      <li className={s.item}>\r\n        <p className={s.text}>PositivePercentage:</p>\r\n        <span className={s.text}>{positivePercentage}%</span>\r\n      </li>\r\n    </ul>\r\n  ) : (\r\n    <Notification message=\"No feedback given\" />\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={s.container}>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.element,\n};\n","import React, { Component } from 'react';\n\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Statistics from './components/Statistics/Statistics';\nimport Section from './components/Section/Section';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    return totalFeedback ? Math.round((good / totalFeedback) * 100) : 0;\n  };\n\n  handleFeedback = e => {\n    const opt = e.target.value;\n    this.setState(prevState => ({ ...prevState, [opt]: prevState[opt] + 1 }));\n  };\n\n  render() {\n    const options = ['good', 'neutral', 'bad'];\n    const { good, neutral, bad } = this.state;\n    const countTotalFeedback = this.countTotalFeedback();\n    const countPositiveFeedbackPercentage =\n      this.countPositiveFeedbackPercentage();\n    const handleFeedback = this.handleFeedback;\n\n    return (\n      <div>\n        <Section title=\"Please leave a feedback\">\n          <FeedbackOptions options={options} handleFeedback={handleFeedback} />\n        </Section>\n\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback}\n            positivePercentage={countPositiveFeedbackPercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n"],"sourceRoot":""}